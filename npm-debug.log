0 info it worked if it ends with ok
1 verbose cli [ '/Users/erik/.nvm/versions/node/v0.12.0/bin/node',
1 verbose cli   '/Users/erik/.nvm/versions/node/v0.12.0/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.5.1
3 info using node@v0.12.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec { raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/erik/inductive.js',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/erik/.npm/inductive.js/0.0.1/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/erik/.npm/inductive.js/0.0.1/package.tgz',
9 verbose tar pack   '/Users/erik/inductive.js' ]
10 verbose tarball /Users/erik/.npm/inductive.js/0.0.1/package.tgz
11 verbose folder /Users/erik/inductive.js
12 info prepublish inductive.js@0.0.1
13 verbose addLocalTarball adding from inside cache /Users/erik/.npm/inductive.js/0.0.1/package.tgz
14 silly cache afterAdd inductive.js@0.0.1
15 verbose afterAdd /Users/erik/.npm/inductive.js/0.0.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/erik/.npm/inductive.js/0.0.1/package/package.json written
17 silly publish { name: 'inductive.js',
17 silly publish   version: '0.0.1',
17 silly publish   description: 'Inductive programming for JavaScript',
17 silly publish   main: './lib/inductive.js',
17 silly publish   scripts: { test: 'node ./test/test.js' },
17 silly publish   repository: { type: 'git', url: 'https://github.com/omphalos/inductive.js' },
17 silly publish   keywords:
17 silly publish    [ 'type',
17 silly publish      'types',
17 silly publish      'ast',
17 silly publish      'abstract-syntax-tree',
17 silly publish      'abstract',
17 silly publish      'syntax',
17 silly publish      'tree',
17 silly publish      'induction',
17 silly publish      'inductive',
17 silly publish      'inductive-programming',
17 silly publish      'inductive-functional-programming',
17 silly publish      'test',
17 silly publish      'testing',
17 silly publish      'unit',
17 silly publish      'mock',
17 silly publish      'solver',
17 silly publish      'solve',
17 silly publish      'mocks',
17 silly publish      'mocking',
17 silly publish      'tests',
17 silly publish      'programming',
17 silly publish      'spec',
17 silly publish      'specification',
17 silly publish      'tdd',
17 silly publish      'test-driven',
17 silly publish      'test-driven-development',
17 silly publish      'bdd',
17 silly publish      'behavior-driven-development',
17 silly publish      'behavior-driven',
17 silly publish      'behavior',
17 silly publish      'ui-testing',
17 silly publish      'ui',
17 silly publish      'io',
17 silly publish      'functional',
17 silly publish      'functional-programming',
17 silly publish      'fp',
17 silly publish      'immutable',
17 silly publish      'immutability',
17 silly publish      'curry-howard-isomorphism',
17 silly publish      'curry',
17 silly publish      'howard',
17 silly publish      'isomorphism',
17 silly publish      'proof',
17 silly publish      'proves',
17 silly publish      'proofs' ],
17 silly publish   author: { name: 'omphalos' },
17 silly publish   license: 'MIT',
17 silly publish   dependencies: { escodegen: '~1.3.1', esprima: '~1.1.1' },
17 silly publish   gitHead: 'e6697811481e1cdd8aaaa8f591169e07a8ff74ba',
17 silly publish   readme: 'inductive.js\n============\n\nThis is my attempt at a library which uses unit tests to autogenerate working code.\n\nExample:\n\n    specify(\'myFunc\',\n      given(2, shouldReturn(4)),\n      given(3, shouldReturn(9)),\n      use(\'*\'));\n\n    /* This code is autogenerated:\n    function myFunc(arg0) {\n      return (arg0 * arg0)\n    }\n    */\n\nAs the unit tests change, the output code automatically changes:\n\n    specify(\'myFunc\',\n      given(2, shouldReturn(8)),  // 4 changed to 8\n      given(3, shouldReturn(27)), // 9 changed to 27\n      use(\'*\'))\n\n    /* This code is autogenerated:\n    function myFunc(arg0) {\n      return (arg0 * (arg0 * arg0))\n    }\n    */\n\nIt works by doing a breadth-first, brute force search over correctly-typed abstract syntax trees and returns the first one that satisfies the unit tests.\n\nThe `use` function gives inductive.js building blocks to choose from as it searches for a solution.  In this case we\'ve given it the multiplication operator.  It combines these building blocks with the function\'s arguments to create candidate test programs.\n\nIdeally, we wouldn\'t need a `use` function, but the search space of all possible JavaScript programs is too large to be practical.\n\nStill, even with this limitation, inductive.js has benefits over conventional unit tests:\n\n* We only need to write and maintain one version of the code, instead of having to simultaneously update code and tests whenever we make a change.\n\n* Code generated by inductive.js is generally more reliable because we have a programmatic guarantee that we haven\'t included code that isn\'t related to a test.\n\nInductive.js can handle non-toy problems as well.  For example, I/O operations like AJAX are handled using mocks.  Additionally, specifications are composable, so inductive.js can generate programs of any size or complexity.\n\nQuick Start\n===========\n\nFirst:\n\n    npm install inductive.js\n\nThen create a file called helloworld.i.js:\n\n    // Load the DSL:\n    require(\'inductive.js\').globals()\n\n    // Specify our program:\n    run(\n      specify(\'helloWorld\',\n        givenNoArgs(\n          mock(\'console.log\',\n            verify(\'hello world\'))),\n        use(\n          \'console.log\',\n          value(\'hello world\'))))\n\n    // Generate the .js file:\n    saveAll()\n\nRun the spec:\n\n    node helloworld.i.js\n\nWe can now run the auto-generated program:\n\n    node helloworld.js\n\nDocs\n====\n\nDocs are forthcoming.  In the meantime, the `testSolves.i.js` file contains many examples.  The `buildingBlocks.js` file contains the default list of building blocks that you can include with the `use` command.\n\nLicense\n=======\n\nMIT\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   bugs: { url: 'https://github.com/omphalos/inductive.js/issues' },
17 silly publish   homepage: 'https://github.com/omphalos/inductive.js',
17 silly publish   _id: 'inductive.js@0.0.1',
17 silly publish   _shasum: 'ae03da875dbac892b76a7351eb74507354bc5bed',
17 silly publish   _from: '.' }
18 silly mapToRegistry name inductive.js
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/inductive.js
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/erik/.npm/inductive.js/0.0.1/package.tgz
24 verbose request uri https://registry.npmjs.org/inductive.js
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 5:09:02 AM
27 verbose request id b4094d4dea2e4b6a
28 http request PUT https://registry.npmjs.org/inductive.js
29 http 403 https://registry.npmjs.org/inductive.js
30 verbose headers { 'content-type': 'application/json',
30 verbose headers   'cache-control': 'max-age=60',
30 verbose headers   'content-length': '95',
30 verbose headers   'accept-ranges': 'bytes',
30 verbose headers   date: 'Thu, 11 Jun 2015 10:02:50 GMT',
30 verbose headers   via: '1.1 varnish',
30 verbose headers   connection: 'keep-alive',
30 verbose headers   'x-served-by': 'cache-dfw1828-DFW',
30 verbose headers   'x-cache': 'MISS',
30 verbose headers   'x-cache-hits': '0',
30 verbose headers   'x-timer': 'S1434016968.784157,VS0,VE1377' }
31 verbose request invalidating /Users/erik/.npm/registry.npmjs.org/inductive.js on PUT
32 error publish Failed PUT 403
33 verbose stack Error: "You cannot publish over the previously published version 0.0.1." : inductive.js
33 verbose stack     at CachingRegistryClient.<anonymous> (/Users/erik/.nvm/versions/node/v0.12.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:254:14)
33 verbose stack     at Request._callback (/Users/erik/.nvm/versions/node/v0.12.0/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:178:14)
33 verbose stack     at Request.self.callback (/Users/erik/.nvm/versions/node/v0.12.0/lib/node_modules/npm/node_modules/request/request.js:344:22)
33 verbose stack     at Request.emit (events.js:110:17)
33 verbose stack     at Request.<anonymous> (/Users/erik/.nvm/versions/node/v0.12.0/lib/node_modules/npm/node_modules/request/request.js:1239:14)
33 verbose stack     at Request.emit (events.js:129:20)
33 verbose stack     at IncomingMessage.<anonymous> (/Users/erik/.nvm/versions/node/v0.12.0/lib/node_modules/npm/node_modules/request/request.js:1187:12)
33 verbose stack     at IncomingMessage.emit (events.js:129:20)
33 verbose stack     at _stream_readable.js:908:16
33 verbose stack     at process._tickCallback (node.js:355:11)
34 verbose statusCode 403
35 verbose pkgid inductive.js
36 verbose cwd /Users/erik/inductive.js
37 error Darwin 14.3.0
38 error argv "/Users/erik/.nvm/versions/node/v0.12.0/bin/node" "/Users/erik/.nvm/versions/node/v0.12.0/bin/npm" "publish"
39 error node v0.12.0
40 error npm  v2.5.1
41 error code E403
42 error "You cannot publish over the previously published version 0.0.1." : inductive.js
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
